# -*- coding: utf-8 -*-
"""Pytessteract OCR

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15R0xGTnylriwgWEIzDcvb5MxEKcture7
"""

!pip install PyMuPDF pyocr
!sudo apt install tesseract-ocr tesseract-ocr-vie  # Install Tesseract and Vietnamese language pack

import fitz  # PyMuPDF
from PIL import Image
import io
import sys
import pyocr
import pyocr.builders

tools = pyocr.get_available_tools()
if len(tools) == 0:
    print("No OCR tool found")
    sys.exit(1)

# Select Tesseract as OCR tool
tool = tools[0]
print("Will use tool '%s'" % (tool.get_name()))

# Set Vietnamese as the language
lang = 'vie'

def ocr_pdf(file_path):
    # Open the PDF file
    doc = fitz.open(file_path)

    # Initialize an empty string to collect text
    full_text = ""

    for page_num in range(len(doc)):
        # Get page
        page = doc.load_page(page_num)

        # Extract images
        image_list = page.get_images(full=True)

        for image_index, img in enumerate(page.get_images(full=True)):
            # Get the XREF of the image
            xref = img[0]

            # Extract the image bytes
            base_image = doc.extract_image(xref)
            image_bytes = base_image["image"]

            # Get the image as PIL object
            image = Image.open(io.BytesIO(image_bytes))

            # Use OCR to extract text
            txt = tool.image_to_string(
                image,
                lang=lang,
                builder=pyocr.builders.TextBuilder()
            )
            full_text += txt + "\n"

    return full_text

print(ocr_pdf(file_path ="1.pdf"))

pip install python-docx

from docx import Document
from docx.shared import Pt

def save_text_as_word_advanced(text, filename):
    doc = Document()
    # Advanced formatting: set a style, font, size, etc.
    paragraph = doc.add_paragraph(text)
    run = paragraph.runs[0]
    run.font.size = Pt(12) # Example: Set font size to 12
    run.font.bold = True # Example: Make the text bold

    # Add more formatting and content as needed...

    doc.save(filename)

# Example usage

filename = "demo0.docx"
save_text_as_word_advanced(ocr_pdf('000.pdf'), filename)

import fitz  # Import the PyMuPDF library

def extract_text_from_pdf(pdf_path):
    """
    Extracts text from a PDF file and saves it to a text file.

    Args:
    pdf_path (str): The path to the PDF file from which to extract text.
    output_txt_path (str): The path to the text file where the extracted text will be saved.

    Returns:
    None
    """
    # Open the PDF file
    document = fitz.open(pdf_path)

    # Initialize an empty text string
    text = ""

    # Loop through each page in the PDF
    for page in document:
        # Extract text from the page and add it to the text string
        text += page.get_text()

    # Close the document
    document.close()

    return text

def save_text_file(text,output_txt_path):
      # Save the extracted text to a text file
    with open(output_txt_path, 'w', encoding='utf-8') as file:
        file.write(text)

    print("Saving 100%")

pdf = '3000.pdf'
t = extract_text_from_pdf(pdf)
save_text_file(t,'3000.txt')

print(t)